(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{375:function(t,e,r){"use strict";r.r(e);var s=r(42),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),r("p",[t._v("ここはまだ書いている途中だよ")])]),t._v(" "),r("h1",{attrs:{id:"psr-3-logger-interface"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#psr-3-logger-interface"}},[t._v("#")]),t._v(" PSR-3: Logger Interface")]),t._v(" "),r("p",[t._v("このドキュメントは、ロギングライブラリの共通のインタフェースのことを説明するよ。")]),t._v(" "),r("p",[t._v("ここでの目標は、ライブラリが"),r("code",[t._v("Psr\\Log\\LoggerInterface")]),t._v("オブジェクトを受け取れるようにすること と シンプルで共有な方法でログを書き出すこと。カスタムが必要なフレームワークとCMSは、目的のためにインタフェースを拡張できるけど、このドキュメントと互換性を維持した方がいい。これによって、アプリケーションが使用するサードパーティライブラリが、ログをまとめて管理できるようになるよ。")]),t._v(" "),r("p",[t._v("略")]),t._v(" "),r("p",[t._v("このドキュメントでの"),r("code",[t._v("実施者")]),t._v("は、ログ関連のライブラリやフレームワークに"),r("code",[t._v("LoggerInterface")]),t._v("を実装する人のこと。ロガーを使う人はユーザって言うよ。")])])}),[],!1,null,null,null);e.default=a.exports}}]);